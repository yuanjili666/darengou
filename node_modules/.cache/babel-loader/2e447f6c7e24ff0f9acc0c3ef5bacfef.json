{"ast":null,"code":"import { fetch as fetchPro } from \"whatwg-fetch\";\nimport qs from \"qs\";\n\nconst get = (url, data) => {\n  if (data) {\n    var str = '';\n\n    for (var key in data) {\n      str += \"&\" + key + \"=\" + data[key];\n    }\n\n    url = url + \"?\" + str.slice(1);\n  }\n\n  var result = fetchPro(url, {\n    credentials: 'include',\n    headers: {\n      \"content-type\": \"application/json\"\n    }\n  }).then(res => res.json());\n  return result;\n};\n\nconst post = (url, data) => {\n  var result = fetchPro(url, {\n    method: \"post\",\n    credentials: \"include\",\n    headers: {\n      \"content-type\": \"application/x-www-form-urlencoded\"\n    },\n    body: qs.stringify(data)\n  }).then(res => res.json());\n  return result;\n};\n\nexport default {\n  get,\n  post\n};","map":{"version":3,"sources":["C:\\js1912\\03-react\\达人购物静态页面\\drg\\react-bk1912-2\\src\\utils\\http.js"],"names":["fetch","fetchPro","qs","get","url","data","str","key","slice","result","credentials","headers","then","res","json","post","method","body","stringify"],"mappings":"AAAA,SAASA,KAAK,IAAIC,QAAlB,QAAkC,cAAlC;AACA,OAAOC,EAAP,MAAe,IAAf;;AAEA,MAAMC,GAAG,GAAE,CAACC,GAAD,EAAKC,IAAL,KAAa;AACpB,MAAGA,IAAH,EAAQ;AACJ,QAAIC,GAAG,GAAC,EAAR;;AACA,SAAI,IAAIC,GAAR,IAAeF,IAAf,EAAoB;AAChBC,MAAAA,GAAG,IAAG,MAAIC,GAAJ,GAAQ,GAAR,GAAYF,IAAI,CAACE,GAAD,CAAtB;AACH;;AAEDH,IAAAA,GAAG,GAACA,GAAG,GAAC,GAAJ,GAAQE,GAAG,CAACE,KAAJ,CAAU,CAAV,CAAZ;AACH;;AAED,MAAIC,MAAM,GAACR,QAAQ,CAACG,GAAD,EAAK;AACpBM,IAAAA,WAAW,EAAC,SADQ;AAEpBC,IAAAA,OAAO,EAAC;AACJ,sBAAe;AADX;AAFY,GAAL,CAAR,CAKRC,IALQ,CAKHC,GAAG,IAAEA,GAAG,CAACC,IAAJ,EALF,CAAX;AAOA,SAAOL,MAAP;AAEH,CAnBD;;AAqBA,MAAMM,IAAI,GAAE,CAACX,GAAD,EAAKC,IAAL,KAAa;AACrB,MAAII,MAAM,GAACR,QAAQ,CAACG,GAAD,EAAK;AACpBY,IAAAA,MAAM,EAAC,MADa;AAEpBN,IAAAA,WAAW,EAAC,SAFQ;AAGpBC,IAAAA,OAAO,EAAC;AACJ,sBAAe;AADX,KAHY;AAMpBM,IAAAA,IAAI,EAACf,EAAE,CAACgB,SAAH,CAAab,IAAb;AANe,GAAL,CAAR,CAORO,IAPQ,CAOHC,GAAG,IAAEA,GAAG,CAACC,IAAJ,EAPF,CAAX;AASA,SAAOL,MAAP;AACH,CAXD;;AAaA,eAAc;AACVN,EAAAA,GADU;AAEVY,EAAAA;AAFU,CAAd","sourcesContent":["import { fetch as fetchPro } from \"whatwg-fetch\" ;\r\nimport qs from \"qs\";\r\n\r\nconst get =(url,data) =>{\r\n    if(data){\r\n        var str='';\r\n        for(var key in data){\r\n            str +=\"&\"+key+\"=\"+data[key];\r\n        }\r\n\r\n        url=url+\"?\"+str.slice(1);\r\n    }\r\n\r\n    var result=fetchPro(url,{\r\n        credentials:'include',\r\n        headers:{\r\n            \"content-type\":\"application/json\"\r\n        }\r\n    }).then(res=>res.json());\r\n\r\n    return result;\r\n\r\n}\r\n\r\nconst post =(url,data) =>{\r\n    var result=fetchPro(url,{\r\n        method:\"post\",\r\n        credentials:\"include\",\r\n        headers:{\r\n            \"content-type\":\"application/x-www-form-urlencoded\"\r\n        },\r\n        body:qs.stringify(data)\r\n    }).then(res=>res.json())\r\n\r\n    return result;\r\n}\r\n\r\nexport default{\r\n    get,\r\n    post\r\n}"]},"metadata":{},"sourceType":"module"}